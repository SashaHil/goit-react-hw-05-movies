{"version":3,"file":"static/js/387.42d46bf2.chunk.js","mappings":"+RAEaA,EAAOC,EAAAA,GAAAA,GAAH,oHAUJC,EAAOD,EAAAA,GAAAA,GAAH,gEAIJE,EAAOF,EAAAA,GAAAA,EAAH,+D,SCwCjB,EAlDa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,oGAEnBJ,EAAU,WAFS,UAGAK,EAAAA,EAAAA,IAAkBJ,GAHlB,OAGbK,EAHa,OAInBR,EAAQQ,GACRN,EAAU,aALS,gDAOnBA,EAAU,YAPS,yDAAH,qDAWpBI,EAAeH,EAChB,GAAE,CAACA,KAGF,gCACc,cAAXF,IACC,SAACP,EAAD,UACGK,EAAKU,KACJ,YAAgE,IAA7DC,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACzC,OACE,UAAClB,EAAD,YACE,gBACEmB,IACEF,EAAY,yCAC0BA,GAD1B,iEAIdG,IAAKL,KAEP,uBAAIA,GAAQG,KACZ,UAACjB,EAAD,yBAAkBe,OAVTF,EAad,MAIK,YAAXT,IAAwB,SAACgB,EAAA,EAAD,IACb,aAAXhB,IAAyB,sDAG/B,C,mMCpDDiB,EAAAA,EAAAA,SAAAA,QAAA,gCACA,IAAMC,EAAO,mCAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,mCAAsCC,IADxD,cACCE,EADD,yBAEEA,EAASb,KAAKc,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACkBN,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DK,IAFhF,cACCH,EADD,yBAIEA,EAASb,KAAKc,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCtB,GAAjC,uFACkBe,EAAAA,EAAAA,IAAA,gBACZf,EADY,oBACOgB,EADP,4CADlB,cACCE,EADD,yBAKEA,EAASb,MALX,kEAQA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAiCJ,GAAjC,uFACkBe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,oBADlB,cACCE,EADD,yBAIEA,EAASb,KAAKT,MAJhB,kEAOA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAAiCvB,GAAjC,uFACkBe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,2BADlB,cACCE,EADD,yBAIEA,EAASb,KAAKc,SAJhB,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n\n  padding: 0;\n\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 60px) / 5);\n`;\n\nexport const Text = styled.p`\n  width: 200px;\n\n  margin-right: 0;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'service/api';\nimport { Item, List, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCredit = async () => {\n      try {\n        setStatus('pending');\n        const data = await fetchMovieCredits(movieId);\n        setCast(data);\n        setStatus('responded');\n      } catch {\n        setStatus('rejected');\n      }\n    };\n\n    getMovieCredit(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'responded' && (\n        <List>\n          {cast.map(\n            ({ cast_id, name, character, profile_path, original_name }) => {\n              return (\n                <Item key={cast_id}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                        : `https://sd.keepcalms.com/i-w200/keep-calm-poster-not-found.jpg`\n                    }\n                    alt={name}\n                  />\n                  <p>{name || original_name}</p>\n                  <Text>Character: {character}</Text>\n                </Item>\n              );\n            }\n          )}\n        </List>\n      )}\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <h2>Something went wrong...</h2>}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `352708f90836dd2b75b209ae082e91df`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesBySearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["List","styled","Item","Text","useState","cast","setCast","status","setStatus","movieId","useParams","useEffect","getMovieCredit","fetchMovieCredits","data","map","cast_id","name","character","profile_path","original_name","src","alt","Loader","axios","API_KEY","fetchTrendingMovies","response","results","fetchMoviesBySearch","query","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}