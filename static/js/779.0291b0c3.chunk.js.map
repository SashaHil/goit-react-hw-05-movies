{"version":3,"file":"static/js/779.0291b0c3.chunk.js","mappings":"iRAEaA,E,QAAOC,GAAAA,GAAH,6C,SC8CjB,EA1CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBJ,EAAU,WAFU,UAGDK,EAAAA,EAAAA,IAAkBJ,GAHjB,OAGdK,EAHc,OAIpBR,EAAWQ,GACXN,EAAU,aALU,gDAOpBA,EAAU,YAPU,yDAAH,qDAWrBI,EAAgBH,EACjB,GAAE,CAACA,KAGF,gCACc,cAAXF,GAA6C,IAAnBF,EAAQU,QACjC,kDAEA,SAACb,EAAD,UACGG,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EAKZ,MAGO,YAAXV,IAAwB,SAACa,EAAA,EAAD,IACb,aAAXb,IAAyB,sDAG/B,C,mMC5CDc,EAAAA,EAAAA,SAAAA,QAAA,gCACA,IAAMC,EAAO,mCAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,mCAAsCC,IADxD,cACCE,EADD,yBAEEA,EAASV,KAAKT,SAFhB,kEAKA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACkBL,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DI,IAFhF,cACCF,EADD,yBAIEA,EAASV,KAAKT,SAJhB,kEAOA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAAiClB,GAAjC,uFACkBY,EAAAA,EAAAA,IAAA,gBACZZ,EADY,oBACOa,EADP,4CADlB,cACCE,EADD,yBAKEA,EAASV,MALX,kEAQA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAAiCnB,GAAjC,uFACkBY,EAAAA,EAAAA,IAAA,gBACZZ,EADY,4BACea,EADf,oBADlB,cACCE,EADD,yBAIEA,EAASV,KAAKe,MAJhB,kEAOA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCJ,GAAjC,uFACkBY,EAAAA,EAAAA,IAAA,gBACZZ,EADY,4BACea,EADf,2BADlB,cACCE,EADD,yBAIEA,EAASV,KAAKT,SAJhB,kE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'service/api';\nimport { List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [results, setResults] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        setStatus('pending');\n        const data = await fetchMovieReviews(movieId);\n        setResults(data);\n        setStatus('responded');\n      } catch {\n        setStatus('rejected');\n      }\n    };\n\n    getMovieReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'responded' && results.length === 0 ? (\n        <h2>There are no reviews</h2>\n      ) : (\n        <List>\n          {results.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </List>\n      )}\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <h2>Something went wrong...</h2>}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `352708f90836dd2b75b209ae082e91df`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesBySearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["List","styled","useState","results","setResults","status","setStatus","movieId","useParams","useEffect","getMovieReviews","fetchMovieReviews","data","length","map","id","author","content","Loader","axios","API_KEY","fetchTrendingMovies","response","fetchMoviesBySearch","query","fetchMovieDetails","fetchMovieCredits","cast"],"sourceRoot":""}