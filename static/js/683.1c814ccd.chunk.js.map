{"version":3,"file":"static/js/683.1c814ccd.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","pages/MovieDetails.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n\nexport const FilmName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n","import { BackLink } from 'components/BackLink/BackLink';\nimport PropTypes from 'prop-types';\nimport { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Container } from './MovieItem.styled';\n\nexport const MovieItem = ({ product }) => {\n  const { title, genres, original_title, overview, poster_path, vote_average } =\n    product;\n\n  const mainPoster = `https://image.tmdb.org/t/p/w300${poster_path}`;\n  const posterFake = `https://sd.keepcalms.com/i-w300/keep-calm-poster-not-found.jpg`;\n\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  return (\n    <>\n      <BackLink to={backLinkRef.current}>Go back</BackLink>\n      <Container>\n        <img src={poster_path ? mainPoster : posterFake} alt={title} />\n        <div>\n          <h2>{title || original_title}</h2>\n          <p>Use Score: {vote_average}</p>\n          <b>Overview</b>\n          <p>{overview}</p>\n          <b>Genres:</b>\n          <p>{genres.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nMovieItem.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n","import { MovieItem } from 'components/MovieItem/MovieItem';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { List, Link } from 'components/MovieList/MovieList.styled';\nimport { fetchMovieDetails } from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMoviesById(movieId);\n  }, [movieId]);\n\n  const getMoviesById = async movieId => {\n    try {\n      setStatus('pending');\n      const data = await fetchMovieDetails(movieId);\n      setSelectedMovie(data);\n      setStatus('responded');\n    } catch {\n      setStatus('rejected');\n    }\n  };\n\n  return (\n    <main>\n      {status === 'responded' && <MovieItem product={selectedMovie} />}\n\n      <h3>Additional information</h3>\n      <List>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </List>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <h2>Something went wrong...</h2>}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `352708f90836dd2b75b209ae082e91df`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesBySearch(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["List","styled","Link","NavLink","StyledLink","BackLink","to","children","size","Container","MovieItem","product","title","genres","original_title","overview","poster_path","vote_average","mainPoster","location","useLocation","backLinkRef","useRef","state","from","current","src","alt","map","name","join","useState","selectedMovie","setSelectedMovie","status","setStatus","movieId","useParams","useEffect","getMoviesById","fetchMovieDetails","data","Loader","Suspense","fallback","axios","API_KEY","fetchTrendingMovies","response","results","fetchMoviesBySearch","query","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}